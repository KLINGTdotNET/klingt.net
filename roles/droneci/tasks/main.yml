- name: Update package index
  become: true
  apt:
    update_cache: true
- name: Download GPG key of docker repository
  uri:
    url: https://download.docker.com/linux/ubuntu/gpg
    return_content: yes
  register: docker_gpgp
- name: Add GPG key of docker repository
  become: true
  shell: "echo '{{ docker_gpgp.content }}' | apt-key add -"
- name: Add docker repository
  become: true
  lineinfile:
    create: true
    path: /etc/apt/sources.list.d/docker.list
    line: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
- name: Update package index
  apt:
    update_cache: true
  become: true
- name: Install docker-ce
  become: true
  apt:
    package:
      - docker-ce
- name: "Create group {{ drone_group }}"
  become: true
  group:
    name: "{{ drone_group }}"
- name: "Create user {{ drone_user }}"
  become: true
  user:
    name: "{{ drone_user }}"
    comment: "Drone CI run user"
    append: true
    group: "{{ drone_group }}"
    groups: docker
    shell: /bin/false
- name: Create postgres user droneci
  become: true
  become_user: postgres
  postgresql_user:
    name: droneci
    password: "{{ droneci_db_password }}"
- name: "Create database {{ droneci_db_name }}"
  become: true
  become_user: "postgres"
  postgresql_db:
    name: "{{ droneci_db_name }}"
    owner: "{{ drone_user }}"
    state: present
- name: Build droneci
  command: make -C ./build/droneci
  delegate_to: localhost
  notify: restart-drone-ci
- name: Install droneci
  become: true
  copy:
    src: "./build/droneci/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    mode: 0755
  with_items:
    - drone-agent
    - drone-server
- name: Install environment file
  become: true
  template:
    src: droneci.tmpl
    dest: /etc/default/droneci
    mode: 0644
  notify: restart-drone-ci
- name: Install systemd units
  become: true
  template:
    src: "{{ item }}.tmpl"
    dest: "/etc/systemd/system/{{ item }}"
    mode: 0600
  with_items:
    - drone-agent.service
    - drone-server.service
  notify: restart-drone-ci
- name: Start drone-server
  become: true
  systemd:
    daemon_reload: yes
    name: "{{ item }}"
    state: started
    enabled: true
  with_items:
    - drone-agent
    - drone-server
